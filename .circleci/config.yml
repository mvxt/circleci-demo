# Author: @mvxt
##########################
# Orb Inclusions
##########################
orbs:
  aws-s3: circleci/aws-s3@1.0.8

##########################
# Common Definitions
##########################
# Simple YAML anchors
aliases:
  - &project_dir "~/circleci-se-challenge"
  - &bucket_name "s3://circleci-se-challenge"

# Executors
executors:
  node-exec:
    docker:
      - image: circleci/node:10.15.1-browsers
    working_directory: *project_dir
    resource_class: medium
  db-exec:
    docker:
      - image: circleci/node:10.15.1-browsers
      - image: postgres:9.4.1
    working_directory: *project_dir
    resource_class: medium

# Commands
commands:
  node-test:
    description: "Set of steps to setup Node.js and run TestCafe tests"
    parameters:
      num_containers:
        type: integer
        default: 1
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install deps
          command: yarn
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Split TestCafe tests between containers and run them 
          command: |
            TESTFILES=$(circleci tests glob test/* | circleci tests split --total=<< parameters.num_containers >>)
            echo "Testing $TESTFILES on this container"
            yarn runTests -- ${TESTFILES}
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: . 
  context-test:
    description: "Simple steps to echo variables in different contexts"
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Verify that we transferred index.html over
          command: test -f index.html
      - run:
          name: Sleep for 15 seconds to show PSQL database running
          command: sleep 15
      - run:
          name: Show files in directory
          command: ls -al
      - run:
          name: Echo env var from differing contexts
          command: echo "$TEST_VAR"

##########################
# Workflow Definitions
##########################
workflows:
  version: 2.1
  build-deploy:
    jobs:
      - test
      - test_parallel:
          requires:
            - test
      - prod_job:
          context: orpheus-prod
          requires:
            - test
      - staging_job:
          context: orpheus-stage
          requires:
            - test
      - build_and_push:
          context: orpheus-prod
          requires:
            - test_parallel
            - some_other_job_prod
            - some_other_job_stage
          filters:
            branches:
              only: master
      - approve:
          type: approval
          requires:
            - build_and_push
          filters:
            branches:
              only: master
      - deploy:
          context: orpheus-prod
          requires:
            - approve
          filters:
            branches:
              only: master

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only: master

    jobs:
      - test_parallel

##########################
# Job Definitions
##########################
version: 2.1
jobs:
  test:
    executor: node-exec
    steps:
      - node-test:
          num_containers: 1
      - persist_to_workspace:
          root: .
          paths:
            - Dockerfile
            - etc
            - css
            - img
            - index.html
            - js
            - mail
            - scss

  test_parallel:
    executor: node-exec
    parallelism: 4
    steps:
      - node-test:
          num_containers: 4

  prod_job:
    executor: db-exec
    steps:
      - context-test

  staging_job:
    executor: db-exec
    steps:
      - context-test

  build_and_push:
    executor: node-exec
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: Build the Docker image, tag it
          command: docker build -t ${DOCKER_TAG} -t ${DOCKER_TAG}:${CIRCLE_SHA1} .
      - run:
          name: Login to docker hub and push
          command: |
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker push ${DOCKER_TAG}
            docker push ${DOCKER_TAG}:${CIRCLE_SHA1}

  deploy:
    docker:
      - image: circleci/python:2.7
    working_directory: *project_dir
    steps:
      - attach_workspace:
          at: .
      - aws-s3/sync:
          from: .
          to: *bucket_name

