# Author: @mvxt
##########################
# Orb Inclusions
##########################
orbs:
  aws-s3: circleci/aws-s3@1.0.8
  sumologic: circleci/sumologic@1.0.3

##########################
# Common Definitions
##########################
# Simple YAML anchors
aliases:
  - &project_dir "~/circleci-se-challenge"
  - &bucket_name "s3://circleci-se-challenge"

# Executors
executors:
  node-exec:
    docker:
      - image: circleci/node:10.15.1-browsers
    working_directory: *project_dir
    resource_class: medium

# Commands
commands:
  hello:
    description: "Show off parameterization and concurrent jobs"
    parameters:
      subject:
        type: string
        default: "World"
    steps:
      - echo "Hello << parameters.subject >>!"

##########################
# Workflow Definitions
##########################
workflows:
  version: 2
  build-deploy:
    jobs:
      - sumologic/workflow-collector
      - test
      - test-parallel:
          requires:
            - test
      - hello:
          requires:
            - test
      - approve:
          type: approval
          requires:
            - test-parallel 
            - hello
          filters:
            branches:
              only: master
      - build-and-push-docker:
          context: orpheus-prod
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy:
          context: orpheus-prod
          requires:
            - approve
          filters:
            branches:
              only: master

  nightly:
    jobs:
      - test
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only: master

##########################
# Job Definitions
##########################
version: 2.1
jobs:
  test:
    executor: node-exec
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install deps
          command: yarn
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Run TestCafe Tests 
          command: |
            yarn runTests
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: . 
      - store_artifacts:
          path: ./results.html
      - persist_to_workspace:
          root: .
          paths:
            - Dockerfile
            - etc
            - css
            - img
            - index.html
            - js
            - mail
            - scss

  test-parallel:
    executor: node-exec
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install deps
          command: yarn
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Glob, Split, and Run TestCafe Tests 
          command: |
            TESTFILES=$(circleci tests glob test/* | circleci tests split --total=4)
            echo "Testing $TESTFILES on this container"
            yarn runTests -- ${TESTFILES}
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: . 
      - store_artifacts:
          path: ./results.html

  hello:
    executor: node-exec
    steps:
      - hello
      - hello:
          subject: "Buddy!"

  build-and-push-docker:
    executor: node-exec
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build the Docker image, tag it
          command: docker build -t ${DOCKER_TAG} -t ${DOCKER_TAG}:${CIRCLE_SHA1} .
      - run:
          name: Login to docker hub and push
          command: |
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker push ${DOCKER_TAG}
            docker push ${DOCKER_TAG}:${CIRCLE_SHA1}

  deploy:
    docker:
      - image: circleci/python:2.7
    working_directory: *project_dir
    steps:
      - attach_workspace:
          at: .
      - aws-s3/sync:
          from: .
          to: *bucket_name

